
&НаКлиенте
Процедура СписокКнигКнигаПриИзменении(Элемент)  
	ТекущаяСтрока = Элементы.СписокКниг.ТекущиеДанные;
	ДанныеХраненияКниги = ПолучитьСтелажиИПолки(ТекущаяСтрока.Книга); 	
	Если ДанныеХраненияКниги.Стелаж = Неопределено Тогда 
		Элементы.СписокКниг.ЗакончитьРедактированиеСтроки(Истина);   
		ПоказатьПредупреждение(,"Данной книги нет в наличии!", 0, "Внимавние" );
	Возврат;
КонецЕсли;   
	ТекущаяСтрока.Стелаж = ДанныеХраненияКниги.Стелаж;
	ТекущаяСтрока.Полка  = ДанныеХраненияКниги.Полка;
	
КонецПроцедуры

// Функция - Получает информацию на коком Стелаже и на 
//   какой полке находится книга
// Параметры:
//  Книга	 - Справочник "Книги"
// 
// Возвращаемое значение:
//  Структура - Содержит Стелаж и полку 
//
&НаСервере
Функция ПолучитьСтелажиИПолки(Книга)

  ДанныеХраненияКниги = Новый  Структура("Стелаж, Полка"); 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсвтаткиКнигНаПолкахОстатки.Стелаж КАК Стелаж,
		|	ОсвтаткиКнигНаПолкахОстатки.Полка КАК Полка
		|ИЗ
		|	РегистрНакопления.ОсвтаткиКнигНаПолках.Остатки(, Книга = &Книга) КАК ОсвтаткиКнигНаПолкахОстатки
		|ГДЕ
		|	ОсвтаткиКнигНаПолкахОстатки.КоличествоОстаток > 0";
	
	Запрос.УстановитьПараметр("Книга", Книга);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДанныеХраненияКниги, ВыборкаДетальныеЗаписи);
	КонецЦикла;
		
	Возврат ДанныеХраненияКниги;
		
КонецФункции  


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка() Тогда
		Объект.Сотрудник = ОбщегоНазначенияСервер.ПолучитьСотрудникаПоТекущемуПользователю();  
	КонецЕсли;
КонецПроцедуры

